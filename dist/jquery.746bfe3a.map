{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArrayOrTemplate","elements","createElement","document","querySelectorAll","selectorOrArray","Array","string","container","innerHTML","trim","content","firstChild","api","Object","create","prototype","assign","oldApi","fn","constructor","jquery","get","index","appendTo","node","Element","each","appendChild","el","append","children","HTMLCollection","i","length","prepend","after","before","addClass","className","classList","add","find","selector","array","elements2","from","concat","end","call","parent","indexOf","parentNode","push","childNode","print","console","log","on","eventType","addEventListener"],"mappings":"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","file":"jquery.746bfe3a.map","sourceRoot":"../src","sourcesContent":["window.$ =window.jQuery = function (selectorOrArrayOrTemplate){\n    let elements;//const 不能赋空值\n    if (typeof selectorOrArrayOrTemplate==='string') {//如果接受的是选择器\n        if(selectorOrArrayOrTemplate[0] === '<'){// 创建 div\n            elements=[createElement(selectorOrArrayOrTemplate)]\n        }\n        else{// 查找 div\n            elements =document.querySelectorAll(selectorOrArrayOrTemplate)\n        }     \n    }else if(selectorOrArray instanceof Array){//如果接受的是数组\n        elements =selectorOrArray\n    }\n    function createElement(string){\n    const container = document.createElement(\"template\");\n    container.innerHTML = string.trim();\n    return container.content.firstChild;\n    }\n        // api 可以操作elements\n    const api = Object.create(jQuery.prototype) // 创建一个对象，这个对象的 __proto__ 为括号里面的东西\n    // const api = {__proto__: jQuery.prototype}\n    Object.assign(api, {\n        elements: elements,\n        oldApi: selectorOrArrayOrTemplate.oldApi\n    })\n    // api.elements = elements\n    // api.oldApi = selectorOrArrayOrTemplate.oldApi\n    return api\n    };\n    jQuery.fn = jQuery.prototype ={//避免浪费内存，把相同方法都放在原型对象中\n    //闭包：函数访问外部的变量\n        constructor: jQuery,\n        jquery: true,\n        elements: elements,\n        get(index) {\n            return this.elements[index];\n        },\n        appendTo(node) {\n            if (node instanceof Element) {\n                // 遍历 elements，对每个 el 进行 node.appendChild 操作\n                this.each(el => node.appendChild(el));\n            } else if (node.jquery === true) {\n                // 遍历 elements，对每个 el 进行 node.get(0).appendChild(el))  操作\n                this.each(el => node.get(0).appendChild(el));\n            }\n        },\n        append(children) {\n            if (children instanceof Element) {\n                this.get(0).appendChild(children);\n            } else if (children instanceof HTMLCollection) {\n                for (let i = 0; i < children.length; i++) {\n                    this.get(0).appendChild(children[i]);\n                    }\n                } else if (children.jquery === true) {\n                    children.each(node => this.get(0).appendChild(node));\n                }\n        },\n        prepend(children){\n            if (children instanceof Element) {\n                this.get(0).prepend(children);\n            } else if (children instanceof HTMLCollection) {\n                for (let i = 0; i < children.length; i++) {\n                    this.get(0).prepend(children[i]);\n                    }\n                } else if (children.jquery === true) {\n                    children.each(node => this.get(0).prepend(node));\n                }\n        },\n        after(node){\n            if (node instanceof Element) {\n                this.get(0).after(node[i]);\n            } else if (node instanceof HTMLCollection) {\n                for (let i = 0; i < node.length; i++) {\n                    this.get(0).after(node[i]);\n                    }\n                } else if (node.jquery === true) {\n                    node.each(node => this.get(0).after(node));\n                }\n        },\n        before(node){\n            if (node instanceof Element) {\n                this.get(0).before(node[i]);\n            } else if (node instanceof HTMLCollection) {\n                for (let i = 0; i < node.length; i++) {\n                    this.get(0).before(node[i]);\n                    }\n                } else if (node.jquery === true) {\n                    node.each(node => this.get(0).before(node));\n                }\n        },\n        addClass(className){\n            for(let i =0;i<elements.length;i++){\n                elements[i].classList.add(className);\n            }\n          return this\n        },\n        find(selector) {\n            let array = [];\n            for (let i = 0; i < elements.length; i++) {\n            const elements2 = Array.from(elements[i].querySelectorAll(selector));\n            array = array.concat(elements2);\n            }\n            //return arr //返回arr就无法进行链式操作\n            //记录上一个上下文环境（api） 调用jquery函数的对象（this）会组成一个上下文环境，\n            array.oldApi = this; // this 是旧 api\n            return jQuery(array);\n        },\n        end(){\n            //返回上一个环境\n            return this.oldApi;//this 是新api\n        },\n        each(fn){\n            for (let i=0;i<elements.length;i++){\n                fn.call(null,elements[i],i)\n            }\n            return this\n        },\n        parent() {\n            const array = [];\n            this.each(node => {\n                if (array.indexOf(node.parentNode) === -1) {\n                    array.push(node.parentNode);\n                }\n            });\n            return jQuery(array);\n        },\n        children(){\n            const array=[]\n            this.each((node)=>{\n                if(array.indexOf(node.childNode) === -1){\n                    array.push(...node.children)\n                }\n            })\n            return jQuery(array)\n        },\n        print(){\n            console.log(elements)//可以直接打出要查的元素\n        },\n        on(eventType, fn) {\n        this.each((node) => {\n            node.addEventListener(eventType, fn)\n        })\n\n        }\n    }\n"]}